(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{355:function(e,t,a){e.exports=a.p+"assets/img/consistent-management-layer.97d872ca.png"},384:function(e,t,a){"use strict";a.r(t);var r=a(45),n=Object(r.a)({},(function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("h1",{attrs:{id:"welcome-to-the-infrastructure-as-code-basics-workshop"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#welcome-to-the-infrastructure-as-code-basics-workshop"}},[e._v("#")]),e._v(" Welcome to the Infrastructure as Code basics workshop")]),e._v(" "),r("p",[e._v("In this workshop you will learn the basic concepts to provision your Azure\nresources by writing code.\n"),r("strong",[e._v("Infrastructure as Code (IaC)")]),e._v(" is the process of managing and provisioning\nAzure resources through source code, rather than interactive configuration\nlike configuring Azure resources by clicking in the Azure Portal.\nIaC enables speed by allowing code to be parameterized and executed whenever\nit is needed, and it eliminates manual configuration whenever a new\nenvironment needs to be deployed. IaC means removing manual configuration of\nAzure resources and reducing the risk of misconfiguration by human errors.")]),e._v(" "),r("p",[e._v("In general there are two approaches to describe infrastructure as code:\n"),r("strong",[e._v("Declarative")]),e._v(" (functional) and "),r("strong",[e._v("imperative")]),e._v(" (procedural).\nThe "),r("strong",[e._v("declarative")]),e._v(" approach describes the desired state how the target\ninfrastructure should be. The "),r("strong",[e._v("imperative")]),e._v(" approach focus on how the\ninfrastructure must be changed to meet the desired configuration.")]),e._v(" "),r("h2",{attrs:{id:"azure-resource-manager"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#azure-resource-manager"}},[e._v("#")]),e._v(" Azure Resource Manager")]),e._v(" "),r("p",[e._v("The Azure Resource Manager is the deployment and management service for\nAzure. It provides a management layer that enables you to create, update and\ndelete resources in Azure. The Azure Resource Manager is a REST Api. When a\nuser sends a request from any of the Azure tools, APIs, or SDKs, Resource\nManager receives the request. It authenticates and authorizes the request.\nResource Manager sends the request to the Azure service, which takes the\nrequested action. Because all requests are handled through the same API, you\nsee consistent results and capabilities in all the different tools.")]),e._v(" "),r("p",[r("img",{attrs:{src:a(355),alt:"Consistent Management Layer"}})]),e._v(" "),r("h2",{attrs:{id:"continuous-integration-ci-and-continuous-deployment-cd"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#continuous-integration-ci-and-continuous-deployment-cd"}},[e._v("#")]),e._v(" Continuous Integration (CI) and Continuous Deployment (CD)")]),e._v(" "),r("p",[e._v("Once we start with IaC we should consider to use a modern source control\nsystem to manage code files and establish a modern software development\nprocess. Software development? Yes, that's exactly what it is when you use\ncode to describe your infrastructure. You should familiarize yourself with\nGit and try to integrate and roll out changes to the code in a timely manner\nto recognize as early as possible when changes fail. This is a brief summary\nof what is behind "),r("strong",[e._v("Continuous Integration")]),e._v(" (CI) and "),r("strong",[e._v("Continuous\nDeployment")]),e._v(" (CD).")]),e._v(" "),r("p",[r("strong",[e._v("CI")]),e._v(" is the process to to integrate changes to code in a timely manner and\n"),r("strong",[e._v("CD")]),e._v(" is the process to deploy changes to environments to recognize as early\nas possible when changes fail. Of course, we need a platform and the tooling\nthat supports us. Azure DevOps or GitHub helps us to map a modern software\nprocess. With Azure Resource Manager we have a consistent management layer\nfor Azure resources. Whether we take a declarative or imperative approach,\ninfrastructure is described as code and code allows us to automate the\nrollout of Azure resources. Azure Pipelines or GitHub Actions allow us to\ndescribe and automate the rollout of code.")]),e._v(" "),r("h2",{attrs:{id:"the-goal-of-the-workshop"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#the-goal-of-the-workshop"}},[e._v("#")]),e._v(" The goal of the workshop")]),e._v(" "),r("p",[e._v("This workshop focuses on the declarative approach using Azure ARM templates\nto describe the desired state of Azure resources. GitHub is used both for\nmanaging the code and for creating workflows that automatically roll out\nchanges to the infrastructure. Based on challenges, the individual components\nare described step by step and illustrated with practical exercises.")]),e._v(" "),r("h2",{attrs:{id:"challenges"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#challenges"}},[e._v("#")]),e._v(" Challenges")]),e._v(" "),r("ul",[r("li",[r("RouterLink",{attrs:{to:"/challenges/challenge_00.html"}},[e._v("Challenge_00")]),e._v(" Setup your system")],1),e._v(" "),r("li",[r("RouterLink",{attrs:{to:"/challenges/challenge_01.html"}},[e._v("Challenge_01")]),e._v(" Import the workshop repository into your personal GitHub organization")],1),e._v(" "),r("li",[r("RouterLink",{attrs:{to:"/challenges/challenge_02.html"}},[e._v("Challenge_02")]),e._v(" Git basics")],1),e._v(" "),r("li",[r("RouterLink",{attrs:{to:"/challenges/challenge_03.html"}},[e._v("Challenge_03")]),e._v(" Create and deploy your first ARM Template")],1),e._v(" "),r("li",[r("RouterLink",{attrs:{to:"/challenges/challenge_04.html"}},[e._v("Challenge_04")]),e._v(" Create a GitHub Workflow to deploy an ARM Template")],1),e._v(" "),r("li",[r("RouterLink",{attrs:{to:"/challenges/challenge_05.html"}},[e._v("Challenge_05")]),e._v(" Create a Pull Request validation workflow (optional)")],1)])])}),[],!1,null,null,null);t.default=n.exports}}]);