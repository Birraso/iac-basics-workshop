(window.webpackJsonp=window.webpackJsonp||[]).push([[4],{361:function(t,a,e){t.exports=e.p+"assets/img/github-repo-settings.1c6b0a45.png"},362:function(t,a,e){t.exports=e.p+"assets/img/select-secrets.ca4615a1.png"},363:function(t,a,e){t.exports=e.p+"assets/img/azure-credentials.07182a56.png"},364:function(t,a,e){t.exports=e.p+"assets/img/authenticate-azure-test.10df58f8.png"},365:function(t,a,e){t.exports=e.p+"assets/img/kickoff-auth-test.a48edc83.png"},366:function(t,a,e){t.exports=e.p+"assets/img/auth-test-details.3d6f540e.png"},389:function(t,a,e){"use strict";e.r(a);var s=e(45),n=Object(s.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"challenge-04-create-a-github-workflow-to-deploy-an-arm-template"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#challenge-04-create-a-github-workflow-to-deploy-an-arm-template"}},[t._v("#")]),t._v(" Challenge_04 Create a GitHub Workflow to deploy an ARM Template")]),t._v(" "),s("p",[t._v("In this challenge, we create a GitHub workflow to deploy the ARM template we\ncreated in the previous challenge. A GitHub Workflow is an automated pipeline\nto build and deploy artifacts like an Azure ARM Template. A workflow is like\nan orchestration of multiple jobs and steps to build and deploy artifacts. It\nis is kicked off by a trigger. A GitHub Workflow supports different trigger\ntypes, but in this challenge we trigger the workflow manually.")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://docs.github.com/en/actions/reference/events-that-trigger-workflows",target:"_blank",rel:"noopener noreferrer"}},[t._v("Here"),s("OutboundLink")],1),t._v(" you can find a description of all supported trigger types.\nThe "),s("a",{attrs:{href:"https://docs.github.com/en/actions/reference/events-that-trigger-workflows#workflow_dispatch",target:"_blank",rel:"noopener noreferrer"}},[t._v("workflow_dispatch"),s("OutboundLink")],1),t._v(" trigger allows us to trigger a workflow manually.")]),t._v(" "),s("h2",{attrs:{id:"grant-a-github-workflow-access-to-your-azure-subscription"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#grant-a-github-workflow-access-to-your-azure-subscription"}},[t._v("#")]),t._v(" Grant a GitHub Workflow access to your Azure Subscription")]),t._v(" "),s("p",[t._v("To grant a GitHub workflow access to your Azure subscription, we need to\ncreate an Azure AD service principal and assign it the desired rights to the\nsubscription. After creating the service principal and assigning the\npermissions, we need to pass the service principal to GitHub so the workflow\ncan access it. GitHub provides a secret store, to save sensitive information\nin your organization, repository or repository environment. When a workflow\nis executed these secrets are injected as encrypted environment variables and\naccessible in the workflow definition.")]),t._v(" "),s("p",[t._v("To create a service principal and assign the needed rights we use the Azure\nCLI and the "),s("strong",[t._v("ad sp create-for-rbac")]),t._v(" command. Open a shell and replace the\nneeded values marked with <>:")]),t._v(" "),s("div",{staticClass:"language-Shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("az ad sp create-for-rbac --name "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<sp name>"')]),t._v(" --role contributor --scopes /subscriptions/"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("subscription id"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" --sdk-auth\n")])])]),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),s("p",[t._v("If you don't know your subscription id use the "),s("strong",[t._v("account show")]),t._v(" command:")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("az account show\n")])])])]),t._v(" "),s("p",[t._v("Copy the JSON output object for your service principal:")]),t._v(" "),s("div",{staticClass:"language-JSON extra-class"},[s("pre",{pre:!0,attrs:{class:"language-json"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"clientId"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<GUID>"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"clientSecret"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<GUID>"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"subscriptionId"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<GUID>"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"tenantId"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<GUID>"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  (...)\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("Open your GitHub repository 'iac-basics-workshop' an go to "),s("strong",[t._v("Settings")]),t._v(".")]),t._v(" "),s("p",[s("img",{attrs:{src:e(361),alt:"repo settings"}})]),t._v(" "),s("p",[t._v("Select Secrets and then "),s("strong",[t._v("New repository secrets")]),t._v(".")]),t._v(" "),s("p",[s("img",{attrs:{src:e(362),alt:"select secrets"}})]),t._v(" "),s("p",[t._v("Paste in your JSON object for your service principal with the name\nAZURE_CREDENTIALS.")]),t._v(" "),s("p",[s("img",{attrs:{src:e(363),alt:"az creds"}})]),t._v(" "),s("h2",{attrs:{id:"create-a-workflow-that-logs-on-to-azure"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#create-a-workflow-that-logs-on-to-azure"}},[t._v("#")]),t._v(" Create a Workflow that logs on to Azure")]),t._v(" "),s("p",[t._v("Now we create our first workflow to check if the workflow can authenticate.\nWorkflows are stored in "),s("strong",[t._v(".github/workflows")]),t._v(" of your repository's root\ndirectory.")]),t._v(" "),s("p",[t._v("Create a workflow file under "),s("strong",[t._v(".github/workflows")]),t._v(" and name it\n"),s("strong",[t._v("authenticate-test.yml")]),t._v(".")]),t._v(" "),s("h3",{attrs:{id:"options-for-triggering-a-workflow"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#options-for-triggering-a-workflow"}},[t._v("#")]),t._v(" Options for triggering a workflow")]),t._v(" "),s("p",[t._v("There are several options for triggering a workflow. To get a full list of\nall available trigger have a look at "),s("a",{attrs:{href:"https://docs.github.com/en/actions/reference/events-that-trigger-workflows",target:"_blank",rel:"noopener noreferrer"}},[t._v("Events that trigger\nworkflows"),s("OutboundLink")],1),t._v("\nat GitHub documentation.")]),t._v(" "),s("p",[t._v("We use the "),s("strong",[t._v("worklow_dispatch")]),t._v(" trigger in our example to be able to trigger\na workflow manually. To use this trigger your workflow trigger will look like\nthis:")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Authenticate Azure Test\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("on")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("workflow_dispatch")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n")])])]),s("h3",{attrs:{id:"github-actions"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#github-actions"}},[t._v("#")]),t._v(" GitHub Actions")]),t._v(" "),s("p",[t._v("The "),s("a",{attrs:{href:"https://github.com/marketplace?type=actions&query=azure",target:"_blank",rel:"noopener noreferrer"}},[t._v("GitHub\nMarketplace"),s("OutboundLink")],1),t._v(" has\nseveral actions that help you automate Azure related tasks. As we want to\nlogin to Azure we use the "),s("a",{attrs:{href:"https://github.com/Azure/login",target:"_blank",rel:"noopener noreferrer"}},[t._v("azure/login@v1"),s("OutboundLink")],1),t._v("\nGitHub Action and pass the "),s("strong",[t._v("AZURE_CREDENTIALS")]),t._v(" secret to authenticate using\nthe previous created service principal:")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("jobs")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("login-azure")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("steps")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Login via Azure CLI"')]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("uses")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" azure/login@v1\n          "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("with")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("creds")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" $"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" secrets.AZURE_CREDENTIALS "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("To see if the workflow is authenticated and uses the right subscription, we\ncan run command-line programs using the operating systems shell:")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("steps")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("---")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Show Azure Account\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("run")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" az account show\n")])])]),s("h3",{attrs:{id:"add-the-workflow-file-to-your-remote-repository"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#add-the-workflow-file-to-your-remote-repository"}},[t._v("#")]),t._v(" Add the workflow file to your remote repository")]),t._v(" "),s("p",[t._v("Your workflow file "),s("strong",[t._v(".github/workflows/authenticate-test.yml")]),t._v(" should now\nlook like this:")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Authenticate Azure Test\n\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("on")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("workflow_dispatch")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("jobs")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("login-azure")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("runs-on")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ubuntu"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("latest\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("steps")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Login via Azure CLI'")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("uses")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" azure/login@v1\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("with")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("creds")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" $"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" secrets.AZURE_CREDENTIALS "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Show Azure Account\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("run")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" az account show\n")])])]),s("p",[t._v("Save the file, add, commit and push the changes:")]),t._v(" "),s("div",{staticClass:"language-Shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" commit -m "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"added auth test workflow "')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push\n")])])]),s("h3",{attrs:{id:"run-the-workflow"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#run-the-workflow"}},[t._v("#")]),t._v(" Run the workflow")]),t._v(" "),s("p",[t._v("Now open a browser and navigate to your GitHub "),s("strong",[t._v("iac-basics-workshop")]),t._v("\nrepository, go to Actions and you will see your created workflow\n"),s("strong",[t._v("Authenticate Azure Test")]),t._v(".")]),t._v(" "),s("p",[s("img",{attrs:{src:e(364),alt:"Authenticate Azure Test"}})]),t._v(" "),s("p",[t._v("Now run the workflow. First click on the workflow "),s("strong",[t._v("Authenticate Azure Test")]),t._v("\nthen click "),s("strong",[t._v("Run workflow")]),t._v(" and select the main branch. Confirm your branch\nselection by clicking the green "),s("strong",[t._v("Run workflow")]),t._v(" button:")]),t._v(" "),s("p",[s("img",{attrs:{src:e(365),alt:"KickOff Auth Test"}})]),t._v(" "),s("p",[t._v("Now click on the running workflow to see more details. Navigate through the\ninterface and see all the information about the run.")]),t._v(" "),s("p",[s("img",{attrs:{src:e(366),alt:"Navigate"}})]),t._v(" "),s("h2",{attrs:{id:"add-a-step-to-deploy-an-azure-arm-template"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#add-a-step-to-deploy-an-azure-arm-template"}},[t._v("#")]),t._v(" Add a Step to deploy an Azure ARM Template")]),t._v(" "),s("p",[t._v("Now that we have seen how to authenticate a workflow against Azure it's time\nto deploy an ARM template. First clone the existing workflow\n"),s("strong",[t._v("authenticate-test.yml")]),t._v(" and rename the clone to "),s("strong",[t._v("storage-arm.yml")]),t._v(". We\nwill deploy the ARM template we created in "),s("RouterLink",{attrs:{to:"/challenges/challenge_03.html"}},[t._v("Challenge_03")]),t._v("\nto Azure. There is already a GitHub Action available in the "),s("a",{attrs:{href:"https://github.com/marketplace/actions/deploy-azure-resource-manager-arm-template",target:"_blank",rel:"noopener noreferrer"}},[t._v("GitHub\nMarketplace"),s("OutboundLink")],1),t._v("\nto deploy an Azure ARM Template.")],1),t._v(" "),s("p",[t._v("The workflow needs some parameters, which we define as environment variables:")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("env")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ResourceGroupName")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'<your RG name>'")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ResourceGroupLocation")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'westeurope'")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("StorageAccountName")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'<your StorageAccount name>'")]),t._v("\n")])])]),s("p",[t._v("In order to access the Azure ARM Template we need to checkout the repository,\nso the workflow can access it.\n"),s("a",{attrs:{href:"https://github.com/marketplace/actions/checkout",target:"_blank",rel:"noopener noreferrer"}},[t._v("Here"),s("OutboundLink")],1),t._v(" you can find a\ndetails description of the "),s("strong",[t._v("checkout")]),t._v(" action in the GitHub Marketplace.")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("uses")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" actions/checkout@v2\n")])])]),s("p",[t._v("To ensure that the ResourceGroup to which the ARM template is applied exists,\nwe simply use the "),s("a",{attrs:{href:"https://github.com/marketplace/actions/azure-cli-action",target:"_blank",rel:"noopener noreferrer"}},[t._v("Azure\nCLI"),s("OutboundLink")],1),t._v(" action:")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("uses")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Azure/CLI@v1\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("with")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("inlineScript")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("|")]),s("span",{pre:!0,attrs:{class:"token scalar string"}},[t._v('\n        #!/bin/bash\n        if $(az group exists --name ${{ env.ResourceGroupName }}) ; then\n          echo "Azure resource group already exists, skipping creation..."\n        else\n          az group create --name ${{ env.ResourceGroupName }} --location ${{ env.ResourceGroupLocation }}\n          echo "Azure resource group created"\n        fi')]),t._v("\n")])])]),s("p",[t._v("At end we can use the "),s("a",{attrs:{href:"https://github.com/marketplace/actions/deploy-azure-resource-manager-arm-template",target:"_blank",rel:"noopener noreferrer"}},[t._v("Deploy Azure Resource Manager (ARM)\nTemplate"),s("OutboundLink")],1),t._v("\naction to deploy the ARM template:")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("uses")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" azure/arm"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("deploy@v1\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("with")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("resourceGroupName")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" $"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" env.ResourceGroupName "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("subscription")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" $"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" secrets.AZURE_SUBSCRIPTION "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("template")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./challenges/challenge_03/storage.json'")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("parameters")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" storageAccountName=$"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" env.StorageAccountName "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("Your workflow should look like this:")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Storage ARM Template\n\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("on")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("workflow_dispatch")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("jobs")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("deploy-storage")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("runs-on")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ubuntu"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("latest\n\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("env")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ResourceGroupName")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'<your RG name>'")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ResourceGroupLocation")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'<your Azure location to use>'")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("StorageAccountName")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'<your StorageAccount name>'")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("steps")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Login via Azure CLI'")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("uses")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" azure/login@v1\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("with")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("creds")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" $"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" secrets.AZURE_CREDENTIALS "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("uses")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" actions/checkout@v2\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("uses")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Azure/CLI@v1\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("with")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("inlineScript")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("|")]),s("span",{pre:!0,attrs:{class:"token scalar string"}},[t._v('\n            #!/bin/bash\n            if $(az group exists --name ${{ env.ResourceGroupName }}) ; then\n              echo "Azure resource group already exists, skipping creation..."\n            else\n              az group create --name ${{ env.ResourceGroupName }} --location ${{ env.ResourceGroupLocation }}\n              echo "Azure resource group created"\n            fi')]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("uses")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" azure/arm"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("deploy@v1\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("with")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("resourceGroupName")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" $"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" env.ResourceGroupName "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("template")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./challenges/challenge_03/storage.json'")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("parameters")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" storageAccountName=$"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" env.StorageAccountName "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),s("p",[t._v("Please replace all values between "),s("strong",[t._v("'<>'")]),t._v(" with your values!!")])]),t._v(" "),s("p",[t._v("Now we can add, commit and push the changes:")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" commit -m "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Storage workflow"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push\n")])])]),s("p",[t._v("Navigate to the Action section in your GitHub repository and run the\nworkflow. Check if the StorageAccount was created in your subscription.")]),t._v(" "),s("h2",{attrs:{id:"congratulations"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#congratulations"}},[t._v("#")]),t._v(" Congratulations")]),t._v(" "),s("p",[t._v("You have created your first GitHub workflow, used a service principal to\nlogin to Azure and deployed an ARM Template.")])])}),[],!1,null,null,null);a.default=n.exports}}]);